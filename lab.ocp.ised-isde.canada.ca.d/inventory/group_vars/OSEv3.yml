---

# The username Ansible should use to access the instances with
ansible_user: ec2-user

# Should Ansible use "become" to gain elevated privileges (i.e.: root)
ansible_become: true

# CNS relative vars - Uncommented to automatically deploy CNS - 'cns_deploy' from all.yml must be 'true' in that case
# openshift_storage_glusterfs_namespace: glusterfs
# openshift_storage_glusterfs_name: cns

# Uncommented to automatically integrate OCP with AWS so EBS can be used as Dynamic Storage backend
openshift_cloudprovider_kind: aws
openshift_cloudprovider_aws_access_key: "{{ lookup('env','AWS_ACCESS_KEY_ID') }}"
openshift_cloudprovider_aws_secret_key: "{{ lookup('env','AWS_SECRET_ACCESS_KEY') }}"
openshift_clusterid: "{{ env_id }}"

# To fix bug: https://bugzilla.redhat.com/show_bug.cgi?id=1588435
oreg_url: "registry.access.redhat.com/openshift3/ose-${component}:${version}"


# OpenShift Specific Configuration Options
# - Check the official OpenShift documentation for more details
deployment_type: openshift-enterprise
openshift_deployment_type: openshift-enterprise
containerized: false

### OCP version to install
openshift_release: v3.10

osm_default_node_selector: 'region=primary'
osm_use_cockpit: true
osm_cockpit_plugins:
- 'cockpit-kubernetes'

# Enable the Multi-Tenant plugin
os_sdn_network_plugin_name: 'redhat/openshift-ovs-multitenant'

# OpenShift FQDNs, DNS, App domain specific configurations
openshift_master_cluster_method: native
openshift_master_default_subdomain: "apps.{{ env_id }}.{{ dns_domain }}"
openshift_master_cluster_hostname: "console.internal.{{ env_id }}.{{ dns_domain }}"
openshift_master_cluster_public_hostname: "console.{{ env_id }}.{{ dns_domain }}"

# Certificates
openshift_master_named_certificates: [{"certfile": "/tmp/src/casl-ansible/inventory/lab.ised-isde.canada.ca/inventory/group_vars/certs/master/cert.pem", "keyfile": "/tmp/src/casl-ansible/inventory/lab.ised-isde.canada.ca/inventory/group_vars/certs/master/privkey.pem", "cafile": "/tmp/src/casl-ansible/inventory/lab.ised-isde.canada.ca/inventory/group_vars/certs/master/fullchain.pem"}]
openshift_hosted_router_certificate: {"certfile": "/tmp/src/casl-ansible/inventory/lab.ised-isde.canada.ca/inventory/group_vars/certs/router/cert.pem", "keyfile": "/tmp/src/casl-ansible/inventory/lab.ised-isde.canada.ca/inventory/group_vars/certs/router/privkey.pem", "cafile": "/tmp/src/casl-ansible/inventory/lab.ised-isde.canada.ca/inventory/group_vars/certs/router/fullchain.pem"} 

# Deploy Logging with dynamic storage
openshift_logging_install_logging: "true"
openshift_logging_es_pvc_dynamic: "true"
openshift_logging_es_pvc_size: "50Gi"
openshift_logging_curator_default_days: "1"
openshift_logging_curator_nodeselector: {'node-role.kubernetes.io/infra':'true'}
openshift_logging_es_nodeselector: {'node-role.kubernetes.io/infra':'true'}
openshift_logging_kibana_nodeselector: {'node-role.kubernetes.io/infra':'true'}
openshift_logging_es_memory_limit: "4G"

# metrics

openshift_metrics_install_metrics: "true"
openshift_metrics_cassandra_storage_type: "dynamic"
openshift_metrics_cassandra_pvc_size: "10Gi"
openshift_metrics_hawkular_nodeselector: {'node-role.kubernetes.io/infra':'true'}
openshift_metrics_heapster_nodeselector: {'node-role.kubernetes.io/infra':'true'}
openshift_metrics_cassandra_nodeselector: {'node-role.kubernetes.io/infra':'true'}
# https://access.redhat.com/solutions/3606401
openshift_metrics_cassandra_image: registry.access.redhat.com/openshift3/metrics-cassandra:v3.10
openshift_metrics_hawkular_metrics_image: registry.access.redhat.com/openshift3/metrics-hawkular-metrics:v3.10 
openshift_metrics_heapster_image: registry.access.redhat.com/openshift3/metrics-heapster:v3.10
openshift_metrics_schema_installer_image: registry.access.redhat.com/openshift3/metrics-schema-installer:v3.10

# Prometheus

openshift_hosted_prometheus_deploy: true
openshift_prometheus_node_selector: {'node-role.kubernetes.io/infra':'true'}
# Workaround for BZ https://bugzilla.redhat.com/show_bug.cgi?id=1549936
openshift_prometheus_node_exporter_image_version: v3.10
# Workaround for BZ https://bugzilla.redhat.com/show_bug.cgi?id=1563888
openshift_node_open_ports: [{"service":"Prometheus Node Exporter", "port":"9100/tcp"},{"service":"Prometheus Router Stats", "port":"1936/tcp"}]

# Prometheus storage
openshift_prometheus_storage_access_modes: ['ReadWriteOnce']
openshift_prometheus_storage_type: pvc
openshift_prometheus_storage_volume_name: prometheus
openshift_prometheus_storage_volume_size: 10Gi

# Prometheus AlertManager storage
openshift_prometheus_alertmanager_storage_access_modes: ['ReadWriteOnce']
openshift_prometheus_alertmanager_storage_volume_name: prometheus-alertmanager
openshift_prometheus_alertmanager_storage_volume_size: 10Gi
openshift_prometheus_alertmanager_storage_type: 'pvc'

# Prometheus AlertBuffer storage
openshift_prometheus_alertbuffer_storage_access_modes: ['ReadWriteOnce']
openshift_prometheus_alertbuffer_storage_volume_name: prometheus-alertbuffer
openshift_prometheus_alertbuffer_storage_volume_size: 10Gi
openshift_prometheus_alertbuffer_storage_type: 'pvc'

openshift_prometheus_sc_name: "gp2"
openshift_prometheus_alertmanager_sc_name: "gp2"
openshift_prometheus_alertbuffer_sc_name: "gp2"



# HTPASSWD Identity Provider
# - update to other types of auth providers if necessary (i.e: LDAP, OAuth, ...)
#openshift_master_identity_providers:
# - 'name': 'htpasswd_auth'
#   'login': 'true'
#   'challenge': 'true'
#   'kind': 'HTPasswdPasswordIdentityProvider'

# GITHUB Identity Provider
openshift_master_identity_providers:
- 'name': 'github_auth'
  'login': 'true'
  'challenge': 'false'
  'kind': 'GitHubIdentityProvider'
  'mappingMethod': 'claim'
  'clientID': 'MYID'
  'clientSecret': 'MYSECRET'
  organizations:
  - 'OSE3Sandbox'
  

# Uncommented to automatically create a set of test users with the above
# HTPASSWD Identity Provider
#create_users:
#  num_users: 5
#  prefix: 'rdu-user'
#  passwd_file: '/etc/origin/master/htpasswd'
#  password: 'rdu-sample'

# OpenShift Node specific parameters
openshift_node_groups:
- name: node-config-master
  labels:
  - 'node-role.kubernetes.io/master=true'
  edits:
  - key: kubeletArguments.kube-reserved
    value:
    - 'cpu={{ ansible_processor_vcpus * 50 }}m'
    - 'memory={{ ansible_processor_vcpus * 50 }}M'
  - key: kubeletArguments.system-reserved
    value:
    - 'cpu={{ ansible_processor_vcpus * 50 }}m'
    - 'memory={{ ansible_processor_vcpus * 100 }}M'
- name: node-config-infra
  labels:
  - 'node-role.kubernetes.io/infra=true'
  edits:
  - key: kubeletArguments.kube-reserved
    value:
    - 'cpu={{ ansible_processor_vcpus * 50 }}m'
    - 'memory={{ ansible_processor_vcpus * 50 }}M'
  - key: kubeletArguments.system-reserved
    value:
    - 'cpu={{ ansible_processor_vcpus * 50 }}m'
    - 'memory={{ ansible_processor_vcpus * 100 }}M'
- name: node-config-compute
  labels:
  - 'node-role.kubernetes.io/compute=true'
  edits:
  - key: kubeletArguments.kube-reserved
    value:
    - 'cpu={{ ansible_processor_vcpus * 50 }}m'
    - 'memory={{ ansible_processor_vcpus * 50 }}M'
  - key: kubeletArguments.system-reserved
    value:
    - 'cpu={{ ansible_processor_vcpus * 50 }}m'
    - 'memory={{ ansible_processor_vcpus * 100 }}M'
